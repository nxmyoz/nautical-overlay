From 62b20776da49ce47a091de6975c44cda9c04ab34 Mon Sep 17 00:00:00 2001
From: didier <didier@users.sourceforge.net>
Date: Sat, 31 Dec 2022 21:49:26 +0100
Subject: [PATCH 1/2] libproj8 fixup convert from/to radian

---
 src/map/Projection_libproj.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/map/Projection_libproj.cpp b/src/map/Projection_libproj.cpp
index e2ea525c..67e80c8b 100644
--- a/src/map/Projection_libproj.cpp
+++ b/src/map/Projection_libproj.cpp
@@ -138,8 +138,8 @@ void Projection_libproj::map2screen(double x, double y, int *i, int *j) const
 	*i =  (int) (W/2.0 + scale * (res.u/111319.0-CX) + 0.5);
 	*j =  (int) (H/2.0 - scale * (res.v/111319.0-CY) + 0.5);
 #else
-	data.uv.v =  y;
-	data.uv.u =  x;
+	data.uv.v =  proj_torad(y);
+	data.uv.u =  proj_torad(x);
 	res = proj_trans(libProj, PJ_FWD, data);
 	*i =  (int) (W/2.0 + scale * (res.uv.u/111319.0-CX) + 0.5);
 	*j =  (int) (H/2.0 - scale * (res.uv.v/111319.0-CY) + 0.5);
@@ -163,8 +163,8 @@ void Projection_libproj::screen2map(int i, int j, double *x, double *y) const
 	data.uv.u =  ((i-W/2.0)/scale+ CX)*111319.0 ;
 	data.uv.v =  ((H/2.0-j)/scale+ CY)*111319.0 ;
 	res = proj_trans(libProj, PJ_INV, data);
-	*x = (double)(res.uv.u);
-	*y = (double)(res.uv.v);
+	*x = proj_todeg(res.uv.u);
+	*y = proj_todeg(res.uv.v);
 #endif
 	//printf("PROJ   screen2map (%3d %3d) -> (%f %f)\n", i,j, *x,*y);
 }

From 841552541d2bb6663ff16679196eff86d06e329d Mon Sep 17 00:00:00 2001
From: didier <didier@users.sourceforge.net>
Date: Tue, 3 Jan 2023 20:54:48 +0100
Subject: [PATCH 2/2] valgrind new projection 'Conditional jump or move depends
 on uninitialised value(s)'

---
 src/map/Projection_libproj.cpp | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/map/Projection_libproj.cpp b/src/map/Projection_libproj.cpp
index 67e80c8b..234b1cab 100644
--- a/src/map/Projection_libproj.cpp
+++ b/src/map/Projection_libproj.cpp
@@ -138,6 +138,7 @@ void Projection_libproj::map2screen(double x, double y, int *i, int *j) const
 	*i =  (int) (W/2.0 + scale * (res.u/111319.0-CX) + 0.5);
 	*j =  (int) (H/2.0 - scale * (res.v/111319.0-CY) + 0.5);
 #else
+	data = proj_coord(0., 0., 0., 0.);
 	data.uv.v =  proj_torad(y);
 	data.uv.u =  proj_torad(x);
 	res = proj_trans(libProj, PJ_FWD, data);
@@ -160,6 +161,8 @@ void Projection_libproj::screen2map(int i, int j, double *x, double *y) const
 	*y = (double)(res.v*RAD_TO_DEG);
 #else
 	PJ_COORD data, res;
+
+	data = proj_coord(0., 0., 0., 0.);
 	data.uv.u =  ((i-W/2.0)/scale+ CX)*111319.0 ;
 	data.uv.v =  ((H/2.0-j)/scale+ CY)*111319.0 ;
 	res = proj_trans(libProj, PJ_INV, data);
